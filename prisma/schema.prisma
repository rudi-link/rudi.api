generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @unique
  code      String[]
  avatar    String?
  api       api[]
  visite    visite[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  link      link[]
}

model api {
  id        String   @id @default(cuid())
  name      String   @unique
  data      Json
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model visite {
  id        String    @id @default(cuid())
  name      String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  checked   Boolean  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  visiter   visiter[]
}

model visiter {
  id        String    @id @default(cuid())
  visite    visite?   @relation(fields: [visiteId], references: [id])
  visiteId  String?
  createdAt DateTime  @default(now())
  outedAt   DateTime?
}

model link {
  id        String   @id
  website   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tag       tag[]
  checked   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model tag {
  id     Int     @id @default(autoincrement())
  name   String
  link   link    @relation(fields: [linkId], references: [id])
  linkId String
  click  click[]
}

model click {
  id        String   @id @default(cuid())
  tag       tag      @relation(fields: [tagId], references: [id])
  createdAt DateTime @default(now())
  tagId     Int
}
